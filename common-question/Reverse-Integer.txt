Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 
Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21
 

Constraints:

-231 <= x <= 231 - 1


class Solution {
public:
    int reverse(int x) {
     long int X = x;
    long int Y = 0;

    if(X<0){
    X = X*(-1);
     while(X!=0){
         int d = X%10;
         Y = (Y*10)+d;
         X = X/10;
     }
        if(Y>=(-2147483648)  && Y<= (2147483647)){
         return (-1)*Y;}
         else{ return 0;}
    }
    else {
         while(X!=0){
         int d = X%10;
         Y = (Y*10)+d;
         X = X/10;
     }
       if(Y>=(-2147483648)  && Y<= (2147483647)){
         return Y;}
         else{ return 0;}
    }
    return 0;
    }

};
